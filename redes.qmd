# Análisis de redes

```{r}
#| label: librerias_redes

library(tidygraph)
library(ggraph)
library(stringr)
library(tidyverse)
library(here)
library(gt)
           
```

```{r}
#| label: inputs_redes

# Levanto el dataset de la encuesta
# Pongo "redes_tu_nombre"como primera columna

df_encuesta <- read_rds(here::here("Outputs", "df_encuesta.rds")) |>
               relocate(redes_tu_nombre)
```

## Insumos de la encuesta

El insumo de estos análisis es una serie de preguntas en donde cada estudiante debe elegir, entre todos los estudiantes de ese cuatrimestre, a los 5 a los que más conoce. Como tal este módulo puede considerarse como una serie de preguntas cerradas de respuesta única con la característica saliente de que esas preguntas poseen muchas opciones posibles. En efecto, las opciones son tantas como estudiantes estén cursando la materia. Desde un punto de vista metodológico lo importante no es tanto que las opciones sean muchas o pocas sino que el rango de estas es conocido y discreto.

Luego de una primera pregunta en donde el estudiante se auto identifica en la lista se pasa a otras 5 preguntas en donde el estudiante va eligiendo a otres compañeres a los cuales más conoce. Si no conoce a nadie más elige la opción "00-NO CONOZCO A NADIE MAS" en las siguientes preguntas.

<center>

![pregunta_redes_1](Inputs/Images/pregunta_redes_1.png){width="600"}

![pregunta_redes_2](Inputs/Images/pregunta_redes_2.png){width="600"}

</center>

La explicitación de lo anterior es importante por la siguiente razón. El análisis de redes sociales (SNA) no se suele llevar bien con la estructura de datos conocida conocida en las ciencias sociales como **matriz de datos** [@galtung1973] o, más en general, como una estructura de datos "casos x variables". Como lo suguiere esta última descripción esta es una estructura afín a lo que se suele demoninar "datos de atributos" en donde los valores de las variables se consideran atributos de cada uno de los casos. En cambio, en el SNA suele ser preferible alguna de los siguientes estructura de datos que se consideran más idóneas para representar un tipo de dato **relacional** [@scott2017, cap. 4]:

a\) Una **matriz de adyacencia** (*adjacency matrix*) en donde las filas y las columnas son asignados para los (mismos) nodos de la red y la presencia de una relación es representada con un valor numérico. Se dice que es una matriz cuadrada y dispersa porque tiene la misma cantidad de filas y columnas y puede que muchas de sus celdas contengan un valor "0". Se suele considerar la representación estándar de esta técnica.

b\) Una **lista de lazos** (e*dge list*) en donde (sólo) se "listan" todas las relaciones de la red. Es una opción que, en comparación a la opción "a", suele ocupar menos espacio en memoria ya que sólo representa la presencia y/o intensidad de las relaciones entre los nodos. En general se trata de una estructura más larga que ancha ya que cada relación ocupa una fila y las columnas se suelen limitar (aunque no necesariamente) a algo como "origen" (*from*), "destino" (*to*) e "intensidad de la relación".

c\) Una **lista de adyacencia** (*adjacency list*) que puede considerarse un híbrido entre las opciones "a" y "b". En este caso cada nodo se representan en una fila y cada una de ellas se "listan" todas sus relaciones con otros nodos. Dado lo anterior esta estructura tiene tantas filas como nodos pero la cantidad de columnas de cada fila es igual a la cantidad de relaciones que tenga cada nodo.

## Breve introducción al análisis de redes

```{r}
#| label: nodes

nodes <- df_encuesta

```

```{r}
#| label: edges

# Hay que realizar desde el archivo de la encuesta dos columnas (from, to) en donde
# el "from" sea el encuestado "redes_tu_nombre" y que 
# el "to" sea el estudiante a quien haya elegido. 
# Dado que cada encuestado elige a 5 estudiantes en este nuevo objeto debería
# haber 5 filas por encuestado.
# Luego de eso se debería filtrar "los edges" para que queden sólo aquellos que están presentes en el "nodes", esto es, con los que contestaron la encuesta.
# 
# Se podría agregar otras columnas al edge
#       cuanti_comision,
#                       unaj_ano_ingreso,
#                       unaj_n_materias_aprobadas,
#                       unaj_n_materias_aprobadas_10

edges <- df_encuesta |>
select(
mail,
redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
cuanti_docente,
unaj_ano_ingreso,
unaj_ano_lectivo,
unaj_periodo_lectivo_num,
unaj_n_materias_aprobadas,
unaj_n_materias_aprobadas_10) |>
pivot_longer(c(
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto),
names_to = "orden_del_contacto",
values_to = "to") |>
mutate(intensidad_relacion = as.integer(case_when( #El más cercano 1 / Más lejano 5
orden_del_contacto == "redes_1_contacto" ~ "1",
orden_del_contacto == "redes_2_contacto" ~ "2",
orden_del_contacto == "redes_3_contacto" ~ "3",
orden_del_contacto == "redes_4_contacto" ~ "4",
orden_del_contacto == "redes_5_contacto" ~ "5"))) |>
select(!c(mail)) |>
semi_join(nodes, by = c("to" = "redes_tu_nombre")) |>
rename(from = redes_tu_nombre) |>
relocate(c(to,orden_del_contacto, intensidad_relacion), .after = from)

          
```

```{r}
#| label: net

# Creo la red con tidygraph

net <- tbl_graph(nodes = nodes,
                 node_key = "redes_tu_nombre",
                 edges = edges,
                 directed = TRUE)

# se puede agregar "directed = TRUE" pero algunas medidas de comunidad no se pueden calcular

# Para tener a mano

net_nodes <- net |>
activate(nodes) |>
as_tibble()

net_edges <- net |>
activate(edges) |>
as_tibble()
```

El análisis de redes (*Network Analysis* o *NA*) es un enfoque que tiene una larga historia dentro de las ciencias en general. En el caso más particular del [Análisis de Redes Sociales](https://es.wikipedia.org/wiki/An%C3%A1lisis_de_redes#An%C3%A1lisis_de_Redes_Sociales) (Social *Network Analysis* o *SNA*) su origen tiene 2 patas diferenciadas. Por un lado, tuvo que ver con la invención del [sociograma](https://es.wikipedia.org/wiki/Sociograma), el cual, a su turno, tuvo que ver con el origen de la [sociometría](https://es.wikipedia.org/wiki/Sociometr%C3%ADa). El sociograma es una herramienta de visualización de las relaciones sociales que conforman un grupo. Para su construcción se requiere de datos de todos los miembros de ese grupo por lo que su utilización muchas veces se restringue a grupos o organizaciones pequeños. En parte por lo anterior, no son muchas las investigaciones empíricas que lo utilizan dada la dificultad metodológica de obtener esos datos.

::: {.callout-note collapse="true"}
## Sabías qué? Análisis de redes y matemática

El análisis de redes en general y el análisis de redes sociales en particular puede considerarse como una aplicación de una teoría matemática abstracta como es la [teoría de grafos](https://es.wikipedia.org/wiki/Teor%C3%ADa_de_grafos) (*Graph Theory*). Esta última se origina en un [clásico artículo](https://drive.google.com/file/d/1Vr1BQT-7GAK9ia5YbMfYul4Lwzhv3LVP/view) de Leonard Euler de 1741 en donde trata el conocido problema de [los siete puentes de Königsberg](https://es.wikipedia.org/wiki/Problema_de_los_puentes_de_K%C3%B6nigsberg) [@euler1741]. El problema consiste en encontrar un recorrido para cruzar a pie toda la ciudad pasando sólo una vez por cada uno de los puentes y regresando al mismo punto de inicio.

![](Inputs/Images/titulo_euler.png){fig-align="center"}
:::

Recién luego de varias décadas la visualización del sociograma se relacionó explícitamente con la teoría de grafos, dando origen al SNA. Si los sociogramas tenían la dificultad metodológica de su construcción, con la incorporación de la teoría de grafos se sumó la dificultad metodológica del análisis de esos datos. Estas 2 condiciones todavía afectan mucho el grado de difusión de este enfoque, aunque en la actualidad tanto la huella digital contenida en la redes sociales virtuales (facebook, twitter, etc.) como la emergencia de programas informáticos que facilitan el análisis ha favorecido una mayor difusión. En parte por lo anterior, en lo que sigue se mostrará como se pueden hacer análisis y visualizaciones de redes con datos provenientes de una base original de casos x columnas.

## Análisis y visualizaciones

### Centralidades de los estudiantes y sus relaciones

```{r}
#| label: periodo

periodo_analisis <- df_encuesta |>
summarise(unaj_comision = str_c(max(unaj_ano_lectivo), 
                                max(unaj_periodo_lectivo), 
                                sep = " - ")) |>
pull()

```

En un grafo, los nodos (*nodes*) representan a los entes relacionados (aquí estudiantes) y las líneas o aristas (*edges*) representan a las relaciones entre ellos. En este sentido, el SNA contiene una serie de conceptos cuantitativos que tienen como insumo la cantidad y calidad de las relaciones. Algunos de esos conceptos con aplicables para cada nodo (p.e. estudiantes), otros son aplicables para el conjunto de ellos (p.e. comisiones).

En el siguiente gráfico (o grafo más precisamente) se puede observar los estudiantes del último cuatrimestre (`r periodo_analisis`) y las relaciones sobre quien conoce a quien al principio de la cursada.

```{r}
#| label: net_last

# Se programa para siempre realizar el análisis sobre la última cursada
# Pongo a todos los que se inscribieron porque quizá en una comisión son pocos
# y pocos se conocen.

net_last <- net |>
activate(nodes) |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(node_centrality_influence = centrality_eigen(
                      directed = TRUE),
       node_centrality_betw = centrality_betweenness(
                              normalized = TRUE),
       node_centrality_degree = centrality_degree(
                                mode = "in",
                                loops = F,),
       siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
       node_comunidad = as.factor(group_components())) |>
activate(edges) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())



```

```{r}
#| label: net_last_nodes_&_edges
#| echo: false
#| warning: false
#| output: true

# Sirve para chequear

net_last_nodes <- net_last |>
activate(nodes) |>
select(redes_tu_nombre,
       redes_1_contacto,
       redes_2_contacto,
       redes_3_contacto,
       redes_4_contacto,
       redes_5_contacto,
       siglas,
       node_centrality_influence,
       node_centrality_betw,
       node_centrality_degree,
       cuanti_docente_siglas) |>
as_tibble()

net_last_edges <- net_last |>
activate(edges) |>
as_tibble()


```

```{r}
#| label: graph_last
#| echo: false
#| warning: false
#| output: true
#| fig.width: 9
#| fig.height: 7

# No uso geom_edge_link porque algunas elecciones son bidireccionales
# geom_link_fun parece más apropiado

graph_last <- ggraph(net_last, layout = "kk") +
geom_edge_fan(aes(check_overlap = TRUE,
                  alpha = edge_centrality_betw)) + 
geom_node_point(aes(fill = cuanti_docente_siglas,
                    size = node_centrality_degree),
                    shape = 21) +
geom_node_text(aes(label = siglas), 
               check_overlap = TRUE,
               repel = TRUE,
               alpha = 0.7) +
scale_color_continuous(guide = 'legend') +
labs(
title = "Quien conoce a quien?",
subtitle = "Estudiantes del ultimo cuatrimestre",
edge_alpha = "Grado de intermediación",
fill = "Comisiones",
size = "Grado de centralidad") +
theme_graph(base_family = 'Helvetica') + # Para que funcione en PDF
theme(legend.key.size = unit(10, 'cm'), #change legend key size
      legend.key.height = unit(1, 'cm'), #change legend key height
      legend.key.width = unit(1, 'cm'), #change legend key width
      legend.title = element_text(size = 14), #change legend title font size
      legend.text = element_text(size = 14)) #change legend text font size

graph_last

ggsave(here("Outputs", "graph_last.png"))

# En este link hay varias buenas opciones de gráficos
# http://users.dimi.uniud.it/~massimo.franceschet/ns/syllabus/make/tidygraph/tidygraph.html
```

En este caso, las relaciones se visualizan con líneas. Estas pueden ser tanto relaciones entrantes ("me conocen a mí") o salientes ("yo conozco a"). Para facilitar la visualización el tamaño de cada estudiante es proporcional a la cantidad de relaciones entrantes que podría considerarse como un indicador grueso de popularidad. En el contexto del SNA este concepto se denomina grado de centralidad (*centrality degree*).

Otro concepto importante del SNA es el de la intermediación (*betweeness centrality*). Este puede calcularse tanto para nodos como para las relaciones. En efecto, en el gráfico anterior se visualizó el valor de este concepto para las relaciones ("grado de intermediación"). El criterio que determina el valor es el número de caminos más cortos que pasan a través de ese nodo o relación. La idea de camino más corto es un concepto fuerte del SNA y hace referencia a cual es el "camino" más corto entre un nodo (o relación) y otro nodo (u otra relación) teniendo en cuenta las relaciones existentes. Por ejemplo, hay personas que no son necesariamente populares pero ocupan una posición ventajosa en la red social porque ellos tienen una información que les puede servir a otros. Pensemos en la típica situación en donde necesitamos pedirle un favor a alguien popular pero la unica manera de acceder a él es a través de su secretaria/o. Este última/o puede no ser popular pero tiene un nivel alto de intermediación.

Por último, aplicaremos un concepto del SNA que, intuitivamente, remite a la idea de influencia. Aquí el criterio de esta centralidad es que aquellos nodos que están conectados con otros nodos que, a su turno, están conectados con otros ... tienen más influencia que aquellos que están conectados con otros nodos pero que, a su turno, estos no están conectados con nadie. En este sentido, no es lo mismo conocer a 5 personas que son pocos conocidos que conocer a 5 personas que son muy conocidas por otros. Esta es la diferencia principal entre alguien "popular" y un "influencer". Ejemplo de conceptos del SNA que se acercan a esta intuición pueden considerarse la centralidad del vector propio (*eigenvector centrality),* la centralidad que se usa en el rankeo de las páginas de google (google page rank) y la centralidad de Katz (*katz centralit*y). Aquí sólo calcularemos la centralidad del propio vector.

```{r}
#| label: tb_nodos

tb_nodos <- net_last |>
activate(nodes) |>
as_tibble() |>
select(siglas,
       node_centrality_degree,
       node_centrality_betw,
       node_centrality_influence) |>
arrange(desc(node_centrality_degree)) |>
slice(1:10) |>
gt() |>
cols_label(
siglas = "Estudiante",
node_centrality_degree = "G. centralidad",
node_centrality_betw = "G. intermediación",
node_centrality_influence = "G. de influencia") |>
fmt_number(c(node_centrality_betw,
             node_centrality_influence),
           decimals = 2)

tb_nodos

```

Como puede observarse en la tabla anterior (sólo se muestran los 10 casos con mayor grado de centralidad), los valores de los diferentes conceptos algunas veces son similares y otras veces no. Esto es razonable ya que cada concepto utiliza un criterio diferente de centralidad. Dada la pluralidad de conceptos de centralidad que existen en el SNA siempre es conveniente explicitar con cual se está trabajando.

```{r}
#| label: community_diego
#| echo: false
#| warning: false
#| output: true
#| include: false

comunnity_last <- ggraph(net_last, layout = "kk") + 
  geom_edge_fan(aes(alpha = stat(index)), 
                show.legend = FALSE) + 
  geom_node_point(aes(colour = node_comunidad), 
                      size = 5) +
  geom_node_text(aes(label = siglas), repel = TRUE) +
  theme_graph(foreground = 'steelblue', 
              fg_text_colour = 'white', 
              base_family = 'Helvetica')
 
comunnity_last

ggsave(here("Outputs", "comunnity_last.png"))
```
