orden_del_contacto == "redes_4_contacto" ~ "4",
orden_del_contacto == "redes_5_contacto" ~ "5"))) |>
select(!c(mail)) |>
semi_join(nodes, by = c("to" = "redes_tu_nombre")) |>
rename(from = redes_tu_nombre) |>
relocate(c(to,orden_del_contacto, intensidad_relacion), .after = from)
#| label: net
# Creo la red con tidygraph
net <- tbl_graph(nodes = nodes,
node_key = "redes_tu_nombre",
edges = edges,
directed = TRUE)
# se puede agregar "directed = TRUE" pero algunas medidas de comunidad no se pueden calcular
net_edges <- net |>
activate(edges) |>
as_tibble()
net_diego_edges <- net_diego |>
activate(edges) |>
as_tibble()
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
filter(!node_is_isolated()) |>
activate(edges) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(edge_centrality_betw = centrality_edge_betweenness()) |>
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
filter(!node_is_isolated()) |>
activate(edges) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
net_diego_edges <- net_diego |>
activate(edges) |>
as_tibble()
net_diego_nodes <- net_diego |>
activate(nodes) |>
as_tibble()
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
filter(!node_is_isolated()) |>
activate(edges) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
nodes_diego <- net_diego |>
activate(nodes) |>
select(redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
siglas) |>
as_tibble()
egdes_diego <- net_diego |>
activate(edges) |>
as_tibble()
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
activate(edges) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
#| label: net_nodes_&_edges
#| echo: false
#| warning: false
#| output: true
# Sirve para chequear
net_diego_nodes <- net_diego |>
activate(nodes) |>
select(redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
siglas) |>
as_tibble()
net_diego_edges <- net_diego |>
activate(edges) |>
as_tibble()
#| label: graph_diego
#| echo: false
#| warning: false
#| output: true
graph_diego <- ggraph(net_diego, layout = "kk") +
geom_edge_link(aes(alpha = edge_centrality_betw)) +
geom_node_point(aes(size = node_pagerank,
colour = node_pagerank)) +
geom_node_text(aes(label = siglas), repel = TRUE) +
scale_color_continuous(guide = 'legend') +
theme_graph()
graph_diego
ggsave(here("Outputs", "graph_diego.png"))
# En este link hay varias buenas opciones de gráficos
# http://users.dimi.uniud.it/~massimo.franceschet/ns/syllabus/make/tidygraph/tidygraph.html
net_diego
View(net_diego_nodes)
View(nodes)
net
#| label: net
# Creo la red con tidygraph
net <- tbl_graph(nodes = nodes,
node_key = "redes_tu_nombre",
edges = edges,
directed = TRUE)
# se puede agregar "directed = TRUE" pero algunas medidas de comunidad no se pueden calcular
# Para tener a mano
net_nodes <- net |>
activate(nodes) |>
as_tibble()
net_edges <- net |>
activate(edges) |>
as_tibble()
View(net_edges)
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)))
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num))
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli")
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli")
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo))
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli")
net <- tbl_graph(nodes = nodes,
node_key = "redes_tu_nombre",
edges = edges,
directed = TRUE)
View(df_encuesta)
df_encuesta_2020_2c <-  df_encuesta |>
filter(filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)))
df_encuesta_2020_2c <-  df_encuesta |>
filter(filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num))
df_encuesta_2020_2c <-  df_encuesta |>
df_encuesta_2020_2c <-  df_encuesta |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num))
df_encuesta_2020_2c <-  df_encuesta |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
select(redes_tu_nombre, cuanti_docente, unaj_ano_lectivo, unaj_periodo_lectivo)
View(df_encuesta_2020_2c)
net_edges <- net |>
activate(edges) |>
as_tibble() |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num))
edges_2020_2c <- edges |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
select(redes_tu_nombre, cuanti_docente, unaj_ano_lectivo, unaj_periodo_lectivo)
edges_2020_2c <- edges |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num))
View(edges_2020_2c)
View(edges)
edges_2020_2c <- edges |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo))
edges_2020_2c <- edges |>
filter(cuanti_docente == "Diego Quartulli")
View(edges_2020_2c)
df_encuesta_2020_2c <-  df_encuesta |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
select(redes_tu_nombre, cuanti_docente, unaj_ano_lectivo, unaj_periodo_lectivo)
View(df_encuesta)
View(df_encuesta_2020_2c)
df_encuesta_2020_2c <-  df_encuesta |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num))
edges_2020_2c <- df_encuesta_2020_2c |>
select(
mail,
redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
cuanti_docente,
unaj_ano_ingreso,
unaj_ano_lectivo,
unaj_periodo_lectivo_num,
unaj_n_materias_aprobadas,
unaj_n_materias_aprobadas_10) |>
pivot_longer(c(
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto),
names_to = "orden_del_contacto",
values_to = "to") |>
mutate(intensidad_relacion = as.integer(case_when( #El más cercano 1 / Más lejano 5
orden_del_contacto == "redes_1_contacto" ~ "1",
orden_del_contacto == "redes_2_contacto" ~ "2",
orden_del_contacto == "redes_3_contacto" ~ "3",
orden_del_contacto == "redes_4_contacto" ~ "4",
orden_del_contacto == "redes_5_contacto" ~ "5"))) |>
select(!c(mail)) |>
semi_join(nodes, by = c("to" = "redes_tu_nombre")) |>
rename(from = redes_tu_nombre) |>
relocate(c(to,orden_del_contacto, intensidad_relacion), .after = from)
View(edges_2020_2c)
df_encuesta_2020_2c <-  df_encuesta |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
select(redes_tu_nombre, redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto cuanti_docente, unaj_ano_lectivo, unaj_periodo_lectivo)
df_encuesta_2020_2c <-  df_encuesta |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
select(redes_tu_nombre, redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto, cuanti_docente, unaj_ano_lectivo, unaj_periodo_lectivo)
View(df_encuesta_2020_2c)
#| label: net
# Creo la red con tidygraph
net <- tbl_graph(nodes = nodes,
node_key = "redes_tu_nombre",
edges = edges,
directed = TRUE)
# se puede agregar "directed = TRUE" pero algunas medidas de comunidad no se pueden calcular
# Para tener a mano
net_nodes <- net |>
activate(nodes) |>
as_tibble()
net_edges <- net |>
activate(edges) |>
as_tibble()
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
activate(edges) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
activate(edges) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
#| label: net_nodes_&_edges
#| echo: false
#| warning: false
#| output: true
# Sirve para chequear
net_diego_nodes <- net_diego |>
activate(nodes) |>
select(redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
siglas) |>
as_tibble()
net_diego_edges <- net_diego |>
activate(edges) |>
as_tibble()
View(net_diego_edges)
View(net_diego_nodes)
View(net_diego_edges)
#| label: graph_diego
#| echo: false
#| warning: false
#| output: true
graph_diego <- ggraph(net_diego, layout = "kk") +
geom_edge_link(aes(alpha = edge_centrality_betw)) +
geom_node_point(aes(size = node_pagerank,
colour = node_pagerank)) +
geom_node_text(aes(label = siglas), repel = TRUE) +
scale_color_continuous(guide = 'legend') +
theme_graph()
graph_diego
ggsave(here("Outputs", "graph_diego.png"))
# En este link hay varias buenas opciones de gráficos
# http://users.dimi.uniud.it/~massimo.franceschet/ns/syllabus/make/tidygraph/tidygraph.html
graph_diego <- ggraph(net_diego, layout = "kk") +
geom_node_text(aes(label = siglas), repel = TRUE) +
scale_color_continuous(guide = 'legend') +
theme_graph()
graph_diego
#| label: graph_diego
#| echo: false
#| warning: false
#| output: true
graph_diego <- ggraph(net_diego, layout = "kk") +
geom_edge_link(aes(size = edge_centrality_betw)) +
geom_node_point(aes(size = node_centrality_betw,
colour = node_pagerank)) +
geom_node_text(aes(label = siglas), repel = TRUE) +
scale_color_continuous(guide = 'legend') +
theme_graph()
graph_diego
ggsave(here("Outputs", "graph_diego.png"))
# En este link hay varias buenas opciones de gráficos
# http://users.dimi.uniud.it/~massimo.franceschet/ns/syllabus/make/tidygraph/tidygraph.html
#| label: graph_diego
#| echo: false
#| warning: false
#| output: true
graph_diego <- ggraph(net_diego, layout = "kk") +
geom_edge_link(aes(size = edge_centrality_betw)) +
geom_node_point(aes(size = node_centrality_betw,
colour = node_centrality_betw)) +
geom_node_text(aes(label = siglas), repel = TRUE) +
scale_color_continuous(guide = 'legend') +
theme_graph()
graph_diego
ggsave(here("Outputs", "graph_diego.png"))
# En este link hay varias buenas opciones de gráficos
# http://users.dimi.uniud.it/~massimo.franceschet/ns/syllabus/make/tidygraph/tidygraph.html
View(net_diego_nodes)
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
activate(edges) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
#| label: net_nodes_&_edges
#| echo: false
#| warning: false
#| output: true
# Sirve para chequear
net_diego_nodes <- net_diego |>
activate(nodes) |>
select(redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
siglas,
node_centrality_betw) |>
as_tibble()
net_diego_edges <- net_diego |>
activate(edges) |>
as_tibble()
View(net_diego_nodes)
#| label: net_diego
# Se programa para siempre realizar el análisis sobre la última cursada
net_diego <- net |>
activate(nodes) |>
filter(cuanti_docente == "Diego Quartulli") |>
filter(unaj_ano_lectivo == max(unaj_ano_lectivo)) |>
filter(unaj_periodo_lectivo_num == max(unaj_periodo_lectivo_num)) |>
mutate(node_pagerank = centrality_pagerank(),
node_centrality_betw = centrality_betweenness(),
node_centrality_degree = centrality_degree(),
siglas = str_sub(redes_tu_nombre, start = 1L, end = 5L),
node_comunidad = as.factor(group_components())) |>
activate(edges) |>
mutate(edge_centrality_betw = centrality_edge_betweenness())
#| label: net_nodes_&_edges
#| echo: false
#| warning: false
#| output: true
# Sirve para chequear
net_diego_nodes <- net_diego |>
activate(nodes) |>
select(redes_tu_nombre,
redes_1_contacto,
redes_2_contacto,
redes_3_contacto,
redes_4_contacto,
redes_5_contacto,
siglas,
node_centrality_betw,
node_centrality_degree) |>
as_tibble()
net_diego_edges <- net_diego |>
activate(edges) |>
as_tibble()
View(net_diego_nodes)
#| label: graph_diego
#| echo: false
#| warning: false
#| output: true
graph_diego <- ggraph(net_diego, layout = "kk") +
geom_edge_link(aes(size = edge_centrality_betw)) +
geom_node_point(aes(size = node_centrality_degree,
colour = node_centrality_degree)) +
geom_node_text(aes(label = siglas), repel = TRUE) +
scale_color_continuous(guide = 'legend') +
theme_graph()
graph_diego
ggsave(here("Outputs", "graph_diego.png"))
# En este link hay varias buenas opciones de gráficos
# http://users.dimi.uniud.it/~massimo.franceschet/ns/syllabus/make/tidygraph/tidygraph.html
df_encuesta <- df_encuesta |>
mutate(unaj_comision = str_c(unaj_ano_lectivo, unaj_periodo_lectivo, sep = "-")) |>
relicate(unaj_comision, .after(unaj_periodo_lectivo))
df_encuesta <- df_encuesta |>
mutate(unaj_comision = str_c(unaj_ano_lectivo, unaj_periodo_lectivo, sep = "-")) |>
relocate(unaj_comision, .after(unaj_periodo_lectivo))
df_encuesta <- df_encuesta |>
mutate(unaj_comision = str_c(unaj_ano_lectivo, unaj_periodo_lectivo, sep = "-")) |>
relocate(unaj_comision, .after = unaj_periodo_lectivo)
tbayl(df_encuesta, unaj_comision)
tabyl(df_encuesta, unaj_comision)
library(janitor)
tabyl(df_encuesta, unaj_comision)
df_encuesta$cuanti_docente
df_encuesta <- df_encuesta |>
rename(
cuanti_docente = indica_el_docente_de_tu_comision,
cuanti_1_palabra = primer_palabra,
cuanti_2_palabra = segunda_palabra,
cuanti_3_palabra = tercera_palabra) |>
mutate(cuanti_docente_siglas = case_when(
cuanti_docente == "Diego Quartulli" ~ "DQ",
cuanti_docente == "Sabrina Iacobellis" ~ "SI",
cuanti_docente == "Martín Bageneta" ~ "MB",
cuanti_docente == "Nayla Pisani" ~ "NP"))
```{r}
